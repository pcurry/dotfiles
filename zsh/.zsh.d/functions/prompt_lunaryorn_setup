# -*- mode: sh; -*-
# Copyright (c) 2014 Sebastian Wiesner <lunaryorn@gmail.com>

# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:

# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.

# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

function prompt_lunaryorn_cwd {
  local repo_name="${vcs_info_msg_1_}"

  if [[ -n $repo_name ]]; then
    # In a VCS repository, print the repository and the
    local repo_subdir="/$(shorten_path "${vcs_info_msg_2_:#.}")"
    printf "%s%s" "${repo_name}" "${repo_subdir:#/}"
  else
    # Fall back to just printing the working directory
    echo -n "$(shorten_path "${PWD}")"
  fi
}

function prompt_lunaryorn_env {
  # Compute environment information
  local -a envs

  # Python virtualenv
  if [[ -n $VIRTUAL_ENV ]]; then
    envs+="%F{blue}py%f:%F{yellow}${VIRTUAL_ENV##*/}%f"
  fi

  # Cabal sandbox
  local sandbox_config="${CABAL_SANDBOX_CONFIG:-${PWD}/cabal.sandbox.config}"
  if [[ -f $sandbox_config ]]; then
    local sandbox_name="${${sandbox_config%/*}##*/}"
    envs+="%F{blue}hs%f:%F{yellow}${sandbox_name}%f"
  fi

  if [[ -n $envs ]]; then
    echo " ${(j:,:)envs}"
  fi
}

function prompt_lunaryorn_hostname {
  if [[ -n $SSH_CONNECTION ]]; then
    echo ' %B%F{cyan}%n@%F{yellow}%M%f%b'
  fi
}

function prompt_lunaryorn_precmd {
  vcs_info 'prompt_lunaryorn'
  battery_info 'prompt_lunaryorn'
}

function prompt_lunaryorn_setup {
  emulate -L zsh

  unsetopt xtrace ksh_arrays
  prompt_opts=(cr percent subst)

  autoload -Uz add-zsh-hook
  autoload -Uz vcs_info
  autoload -Uz battery_info
  autoload -Uz shorten_path

  add-zsh-hook precmd prompt_lunaryorn_precmd

  # VCS info styling
  zstyle ':vcs_info:*:prompt_lunaryorn:*' max-exports 3
  zstyle ':vcs_info:*:prompt_lunaryorn:*' check-for-changes true
  zstyle ':vcs_info:*:prompt_lunaryorn:*' use-prompt-escapes true
  zstyle ':vcs_info:*:prompt_lunaryorn:*' get-revision true
  zstyle ':vcs_info:*:prompt_lunaryorn:*' get-bookmarks true
  zstyle ':vcs_info:*:prompt_lunaryorn:*' stagedstr '+'
  zstyle ':vcs_info:*:prompt_lunaryorn:*' unstagedstr '*'
  zstyle ':vcs_info:*:prompt_lunaryorn:*' hgrevformat '%r' # Local revno only
  zstyle ':vcs_info:hg:prompt_lunaryorn:*' branchformat 'r%r'
  zstyle ':vcs_info:*:prompt_lunaryorn:*' formats \
         '%F{blue}%s%f:%F{yellow}%b%f%%B%F{green}%c%f%F{magenta}%u%f%%b' \
         '%r' '%S'              # The repo name and subdir for use in our cwd
  zstyle ':vcs_info:*:prompt_lunaryorn:*' actionformats \
         '%F{blue}%s%f:%F{yellow}%b%f%%B%F{red}(%a)%f%F{green}%c%f%F{magenta}%u%f%%b' \
         '%r' '%S'

  # Battery styling
  zstyle ':battery_info:*:prompt_lunaryorn' chargingstr '%F{yellow}'
  zstyle ':battery_info:*:prompt_lunaryorn' dischargingstr '%F{magenta}'
  zstyle ':battery_info:*:prompt_lunaryorn' format ' %c%(R.%p%%%%.%r)%%f'

  local pwd='%(!.%F{red}.%F{cyan})$(prompt_lunaryorn_cwd)%f%b'
  local info='$(prompt_lunaryorn_hostname)${battery_info_msg_}'
  local sep='%(?.%F{green}.%B%F{red})$%f%b '

  local inline_rprompt
  if [[ $TERM == xterm* ]]; then
    RPROMPT='${vcs_info_msg_0_}$(prompt_lunaryorn_env)'
  else
    inline_rprompt=' ${vcs_info_msg_0_}$(prompt_lunaryorn_env)'
  fi

  PROMPT="${pwd}${info}${inline_rprompt} ${sep}"
  SPROMPT='zsh: correct %F{red}%R%f to %F{green}%r%f [nyae]? '
}

prompt_lunaryorn_setup "$@"
