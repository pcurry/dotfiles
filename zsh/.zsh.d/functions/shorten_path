# -*- mode: sh; -*-
# Copyright (c) 2014 Sebastian Wiesner <lunaryorn@gmail.com>

# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:

# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.

# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

# Shorten the given path, by collapsing all leading components to their first
# letter.

emulate -L zsh
setopt extended_glob

local pathname="${1/#$HOME/~}"
local tail="${pathname:t}"

if [[ "$pathname" == (#m)[/~.] ]]; then
  pathname="${MATCH}"
  unset MATCH
  echo "${pathname}"
elif [[ $tail == $pathname ]]; then
  # If the path has no components, don't shorten it, as we promise to keep the
  # last component untouched
  echo "$tail"
else
  # If the path has more than one component, shorten all leading components
  local -a parts
  local -a shortened
  local head="${${pathname:h}:#.}"

  # Split the head into its components
  parts=("${(@s:/:)head}")
  # Retain the first characters, and any leading dots.  We need extended_glob
  # for the # operator, which matches zero or more occurrences of . here.  @
  # retains empty parts, which is required to accurately restore the directory
  # separators later, and M inverts the meaning of ## so that we keep leading
  # characters instead of removing them.
  shortened=("${(@M)parts##.#?}")
  shortened+="$tail"
  # Join all components again
  echo "${(@j:/:)shortened}"
fi
